{
	"info": {
		"_postman_id": "d3293b8c-89c1-4f36-962a-ee0672272407",
		"name": "LibraryRentals",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37530672"
	},
	"item": [
		{
			"name": "Books",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Show {Name}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}books/aneis",
									"host": [
										"{{base_url}}books"
									],
									"path": [
										"aneis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Index",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}books/",
									"host": [
										"{{base_url}}books"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Livro Exemplo\",\r\n    \"type\": \"FicÃ§Ã£o\",\r\n    \"author\": \"Autor Famoso\",\r\n    \"pages\": 300,\r\n    \"price\": 49.90,\r\n    \"synopsis\": \"Uma histÃ³ria incrÃ­vel...\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}books/",
									"host": [
										"{{base_url}}books"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Livro Atualizado\",\r\n    \"type\": \"Drama\",\r\n    \"author\": \"Autor Famoso\",\r\n    \"pages\": 320,\r\n    \"price\": 55.90,\r\n    \"synopsis\": \"Uma nova sinopse...\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}books/4",
									"host": [
										"{{base_url}}books"
									],
									"path": [
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}books/4",
									"host": [
										"{{base_url}}books"
									],
									"path": [
										"4"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Rentals",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Index",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}rentals",
									"host": [
										"{{base_url}}rentals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show per User or Book",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}rentals/maria",
									"host": [
										"{{base_url}}rentals"
									],
									"path": [
										"maria"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"book_id\": 2,\r\n    \"user_id\": 3,\r\n    \"start_date\": \"2025-02-20\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}rentals/",
									"host": [
										"{{base_url}}rentals"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"book_id\": 1,\r\n    \"user_id\": 2,\r\n    \"start_date\": \"2025-02-20\",\r\n    \"end_date\": \"2025-03-01\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}rentals/1",
									"host": [
										"{{base_url}}rentals"
									],
									"path": [
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Return a book",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}rentals/2/return",
									"host": [
										"{{base_url}}rentals"
									],
									"path": [
										"2",
										"return"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}rentals/1/",
									"host": [
										"{{base_url}}rentals"
									],
									"path": [
										"1",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Login infos",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Logout",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}logout",
									"host": [
										"{{base_url}}logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Index",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}users",
									"host": [
										"{{base_url}}users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}users/1",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"JoÃ£o da Silval\",\r\n    \"cpf\": \"12345678902\",\r\n    \"email\": \"joao1@example.com\",\r\n    \"password\": \"senha123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}users/1",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}users/1",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Salvar token de autenticaÃ§Ã£o\", function () {\r",
									"    let jsonData;\r",
									"    try {\r",
									"        jsonData = pm.response.json();\r",
									"        console.log(\"Resposta JSON:\", jsonData);\r",
									"    } catch (e) {\r",
									"        console.log(\"Erro ao processar JSON:\", e.message);\r",
									"    }\r",
									"    \r",
									"    if (jsonData && jsonData.token) {\r",
									"        pm.globals.set(\"authToken\", jsonData.token);\r",
									"        console.log(\"Token salvo com sucesso:\", jsonData.token);\r",
									"    } else {\r",
									"        console.log(\"Erro: Token nÃ£o encontrado.\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"joao1@example.com\",\r\n    \"password\": \"senha123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}login",
							"host": [
								"{{base_url}}login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"JoÃ£o da Silva\",\n    \"cpf\": \"12345678902\",\n    \"email\": \"joao1@example.com\",\n    \"password\": \"senha123\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}register",
							"host": [
								"{{base_url}}register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Salvar token de autenticaÃ§Ã£o\", function () {\r",
					"    let contentType = pm.response.headers.get(\"Content-Type\");\r",
					"\r",
					"    console.log(\"Content-Type:\", contentType);\r",
					"\r",
					"    if (contentType && contentType.includes(\"application/json\")) {\r",
					"        try {\r",
					"            let jsonData = pm.response.json();\r",
					"            pm.expect(jsonData).to.have.property(\"token\");\r",
					"            pm.globals.set(\"authToken\", jsonData.token);\r",
					"            console.log(\"Token salvo com sucesso:\", jsonData.token);\r",
					"        } catch (e) {\r",
					"            console.log(\"Erro ao converter JSON:\", e.message);\r",
					"        }\r",
					"    } else {\r",
					"        console.log(\"Erro: Resposta nÃ£o Ã© JSON. Verifique o backend.\");\r",
					"    }\r",
					"});\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		},
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}